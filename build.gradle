apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

group = 'slack-capybara'
version = '1.0.1'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile)*.options*.encoding = defaultEncoding
tasks.withType(GroovyCompile)*.groovyOptions*.encoding = defaultEncoding

repositories {
    jcenter()
    maven { url "http://repo.maven.apache.org/maven2" }
    maven {
        url "https://oss.sonatype.org/content/repositories/releases/"
    }
}

configurations { testJMockit }

dependencies {
    compile 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'
    compile 'org.slf4j:slf4j-api:1.7.30'
    compile 'org.slf4j:jul-to-slf4j:1.7.30'

    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.h2database:h2:1.4.200'
    compile 'org.jdbi:jdbi:2.78'
    compile 'com.google.guava:guava:23.0'
    compile 'org.yaml:snakeyaml:1.26'
    compile 'com.github.masahitojp:nineteen:0.0.6'
    compile 'com.github.masahitojp:botan-core:0.3.1.0'
    compile 'com.github.masahitojp:botan-mapdb:0.2.1.1'
    compile 'org.apache.httpcomponents:httpclient:4.5.12'
    compile 'org.apache.commons:commons-lang3:3.12.0'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'org.jsoup:jsoup:1.13.1'
    compile 'it.sauronsoftware.cron4j:cron4j:2.2.5'

    testJMockit 'org.jmockit:jmockit:1.20'
    testCompile configurations.testJMockit.dependencies
    testCompile 'junit:junit:4.13'
    testCompile "org.hamcrest:java-hamcrest:2.0.0.0"
}

test {
    // jmockitがjunitよりも前にclasspathが通ってる必要があるので下記の対応を行う
    jvmArgs "-javaagent:${configurations.testJMockit.asPath}"
}

jar {

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    from fileTree(dir: 'build/classes/main', include: '**/*.class')

    manifest {
        attributes 'Implementation-Title': 'slack-capybara', 'Implementation-Version': 1.0
        attributes "Main-Class" : "Bootstrap"
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.3'
    }
}

jacoco {
    toolVersion = "0.7.4.201502262128"
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task archive(type: Zip, dependsOn: jar) {
    archiveName = "${baseName}_${version}.${extension}"
    from('scripts') {
        filter(
                org.apache.tools.ant.filters.ReplaceTokens,
                tokens: [
                        'version': version
                ]
        )
    }
    into('conf') {
        from "src/main/resources/capybara.yaml"
    }
    into('lib') {
        from jar.archivePath
    }
}

artifacts {
    archives archive
}
